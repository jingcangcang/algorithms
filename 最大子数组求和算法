# algorithms
package test;

public class MaxSubarray {
	private int[] array={13,-3,-25,20,-3,-16,-23,18,20,-7,12,-5,-22,15,-4,7};;
	private int max(int low,int high){
		if(low==high)
			return array[low];
		
		
		int mid=(low+high)/2;
		int leftMax=max(low,mid);
		int rightMax=max(mid+1,high);
		
		int midLeftMax=0;
		int temp=0;
		for(int i=mid;i>=low;i--){
			temp+=array[i];
			if(temp>=midLeftMax)
				midLeftMax=temp;
		}
		
		int midRightMax=0;
		temp=0;
		for(int i=mid+1;i<high;i++){
			temp+=array[i];
			if(temp>=midRightMax)
				midRightMax=temp;
		}
		
		int midMax=midLeftMax+midRightMax;
		
		int max=leftMax>midMax?leftMax:midMax;
		return max>rightMax?max:rightMax;		
	}

	public static void main(String[] args){
		
		
		MaxSubarray test=new MaxSubarray();
		System.out.println(test.max(0, test.array.length-1));
		
	}
}
