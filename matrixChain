package test;

public class MatrixChain {
	//先计算对角线
	public void matrixChain(int[] p){
		int number=p.length;
		int[][] m=new int[number-1][number-1];//存储第i个矩阵到第j个矩阵的连乘积所用的最小数乘次数
		int[][] s=new int[number-1][number-1];//记录第i个矩阵到第j个矩阵的连乘积所用的最小数乘次数时的切分点
		int i,j,k,n;
		for(i=0;i<number-2;i++)
			m[i][i]=0;
		
		
		for(i=1;i<=number-2;i++){//总共有number-3条对角线
			for(j=0;j<=number-i-2;j++){//因为按对角线更新，所以每次更新都得更新number-1个数
				k=j+i;
				m[j][k]=p[j]*p[j+1]*p[k+1]+m[j+1][k];
				s[j][k]=j;
				
				for(n=j+1;n<k;n++){
					int t=m[j][n]+m[n+1][k]+p[j]*p[n+1]*p[k+1];
					if(t<m[j][k]){
						m[j][k]=t;
						s[j][k]=n;
					}
				}
			}
		}
		
		for(i=0;i<number-1;i++){
			for(j=0;j<number-1;j++){
				System.out.print("      "+m[i][j]);
			}
			System.out.println();
		}
		
		for(i=0;i<number-1;i++){
			for(j=0;j<number-1;j++){
				System.out.print("      "+s[i][j]);
			}
			System.out.println();
		}
		
	}
	
	public static void main(String[] args){
		int[] p={30,35,15,5,10,20,25};
		MatrixChain test=new MatrixChain();
		test.matrixChain(p);
	}
}
